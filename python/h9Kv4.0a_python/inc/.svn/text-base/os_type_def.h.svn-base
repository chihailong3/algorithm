
#ifndef     _OS_TYPE_DEF_H
#define     _OS_TYPE_DEF_H


 
#ifdef		_WIN32
#define		WINDOWS_OS
#define		MSWIN32
#elif defined(__linux__)
#define		LINUX_OS
#elif defined(sun) || defined(__sun)
#define     SUN_OS
#elif defined(_AIX)
#define     AIX_OS
#elif defined(_hpux)
#define     HPUX_OS
#endif



#ifdef	WINDOWS_OS
#include	<sys/types.h>
#include	<sys/stat.h>
#include	<sys/utime.h>
#include	<fcntl.h> 
#include	<stdio.h>
#include	<string.h>
#include	<stdlib.h> 
#include	<windows.h>
#include	<string.h>
#include	<time.h>
#include	<tchar.h>
#include	<io.h>
#include	<winsock.h>
#include	<direct.h>
#include	<signal.h>
#include	<memory.h>
#include	<process.h>
#include	<ctype.h>
#include	<math.h>

#else //UNIX

#define UNIX_OS
#ifndef		_REENTRANT
	#define		_REENTRANT
#endif

#include	<sys/ipc.h>
#include	<sys/sem.h>
#include	<sys/shm.h>
#include	<sys/types.h>
#include	<sys/stat.h>
#include	<fcntl.h> 
#include	<stdio.h>
#include	<string.h>
#include	<stdlib.h> 
#include	<sys/mman.h>
#include	<sys/time.h>
#include 	<signal.h>
#include 	<sys/signal.h>
#include 	<unistd.h>
#include 	<time.h>
#include 	<utime.h>
#include 	<strings.h>
#include	<pthread.h>
#include 	<sys/socket.h>
#include 	<sys/errno.h>
#include 	<netinet/in.h>
#include 	<netdb.h>
#include 	<math.h>
#include 	<fcntl.h>
#include	<errno.h>	
#include	<arpa/inet.h>
#include	<dirent.h>  
#include	<fnmatch.h>  



typedef struct sockaddr_in SOCKADDR_IN;
//#define INADDR_NONE	0xffffffff
#define SOCKET          int
#define INVALID_SOCKET  (-1)
#ifndef  SOCKET_ERROR
#define SOCKET_ERROR    (-1)
#endif
#ifndef SO_REUSEPORT
#define SO_REUSEPORT 15 
#endif

#endif //UNIX



#ifdef		LINUX_OS
#include 	<sys/ioctl.h>
#include	<wait.h>
#endif /*LINUX_OS*/



#ifdef		AIX_OS
#include	<sys/wait.h>
#include 	<sys/ioctl.h>
#endif /*AIX_OS*/


#ifdef		HPUX_OS
#include	<wait.h>
#endif /*HPUX_OS*/


#ifdef		SUN_OS
#ifdef		_BIG_ENDIAN
#define		_BIG_ENDIAN_
#endif
#include 	<sys/filio.h>
#include	<wait.h>
#endif /*SUN_OS*/


#ifdef		WINDOWS_OS
#define		socklen_t				int
#define		SIGQUIT					SIGBREAK
#define 	bzero(addr, size)		memset(addr, 0, size)
#define		sleep(sec)				Sleep(sec*1000)
#define		kill(run_pid, SIGNAL)	TerminateProcess(run_pid, 0)
//#define		errno					WSAGetLastError()
#endif /*WINDOWS_OS*/



#ifdef WINDOWS_OS
	#define	TASK_SUFFIX_NAME	".exe"
#elif defined(AIX_OS)
	#define	TASK_SUFFIX_NAME	".axe"
#elif defined(SUN_OS) 
#ifdef _BIG_ENDIAN_  //SPARC
	#define	TASK_SUFFIX_NAME	".dxe"
#else // X86
	#define	TASK_SUFFIX_NAME	".xxe"
#endif
#elif defined(LINUX_OS)
	#define	TASK_SUFFIX_NAME	".lxe"
#elif defined(HPUX_OS)
	#define	TASK_SUFFIX_NAME	".hxe"
#else
	#define	TASK_SUFFIX_NAME	".dxe"
#endif



#endif  /*_OS_TYPE_DEF_H*/

