# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_py_rdb')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_py_rdb')
    _py_rdb = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_py_rdb', [dirname(__file__)])
        except ImportError:
            import _py_rdb
            return _py_rdb
        try:
            _mod = imp.load_module('_py_rdb', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _py_rdb = swig_import_helper()
    del swig_import_helper
else:
    import _py_rdb
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def _readPointer(INPUT):
    return _py_rdb._readPointer(INPUT)
_readPointer = _py_rdb._readPointer

def _connect_H9000_EMS():
    return _py_rdb._connect_H9000_EMS()
_connect_H9000_EMS = _py_rdb._connect_H9000_EMS

def _disconnect_H9000_EMS():
    return _py_rdb._disconnect_H9000_EMS()
_disconnect_H9000_EMS = _py_rdb._disconnect_H9000_EMS

def _PyReadIntValByName(ptNameStr, value):
    return _py_rdb._PyReadIntValByName(ptNameStr, value)
_PyReadIntValByName = _py_rdb._PyReadIntValByName

def _PyReadFloatValByName(ptNameStr):
    return _py_rdb._PyReadFloatValByName(ptNameStr)
_PyReadFloatValByName = _py_rdb._PyReadFloatValByName

def Broadcast_sw(pt, stauts):
    return _py_rdb.Broadcast_sw(pt, stauts)
Broadcast_sw = _py_rdb.Broadcast_sw

def Broadcast_ana(pt, value):
    return _py_rdb.Broadcast_ana(pt, value)
Broadcast_ana = _py_rdb.Broadcast_ana

def Broadcast_ana_lname(ptname, value):
    return _py_rdb.Broadcast_ana_lname(ptname, value)
Broadcast_ana_lname = _py_rdb.Broadcast_ana_lname

def Broadcast_sw_lname(ptname, status):
    return _py_rdb.Broadcast_sw_lname(ptname, status)
Broadcast_sw_lname = _py_rdb.Broadcast_sw_lname

def _PyReadLogicNamelByID(pt):
    return _py_rdb._PyReadLogicNamelByID(pt)
_PyReadLogicNamelByID = _py_rdb._PyReadLogicNamelByID

def MountDB(INPUT):
    return _py_rdb.MountDB(INPUT)
MountDB = _py_rdb.MountDB

def UnMountDB():
    return _py_rdb.UnMountDB()
UnMountDB = _py_rdb.UnMountDB

def MountDBFile(arg1, arg2):
    return _py_rdb.MountDBFile(arg1, arg2)
MountDBFile = _py_rdb.MountDBFile

def MountFile(arg1, arg2):
    return _py_rdb.MountFile(arg1, arg2)
MountFile = _py_rdb.MountFile

def UnMountFile(arg1, arg2):
    return _py_rdb.UnMountFile(arg1, arg2)
UnMountFile = _py_rdb.UnMountFile

def GetDBName():
    return _py_rdb.GetDBName()
GetDBName = _py_rdb.GetDBName

def GetDBLongname():
    return _py_rdb.GetDBLongname()
GetDBLongname = _py_rdb.GetDBLongname

def GetDBVersion():
    return _py_rdb.GetDBVersion()
GetDBVersion = _py_rdb.GetDBVersion

def GetStationNum():
    return _py_rdb.GetStationNum()
GetStationNum = _py_rdb.GetStationNum

def IsPointExist(point):
    return _py_rdb.IsPointExist(point)
IsPointExist = _py_rdb.IsPointExist

def GetEntryNameById(point):
    return _py_rdb.GetEntryNameById(point)
GetEntryNameById = _py_rdb.GetEntryNameById

def GetEntryLongnameById(point):
    return _py_rdb.GetEntryLongnameById(point)
GetEntryLongnameById = _py_rdb.GetEntryLongnameById

def GetPtNameById(point, ptNameStr, pt_name):
    return _py_rdb.GetPtNameById(point, ptNameStr, pt_name)
GetPtNameById = _py_rdb.GetPtNameById

def GetPtLongnameById(point):
    return _py_rdb.GetPtLongnameById(point)
GetPtLongnameById = _py_rdb.GetPtLongnameById

def GetPtCmdMsgSelById(point, cmd_sel):
    return _py_rdb.GetPtCmdMsgSelById(point, cmd_sel)
GetPtCmdMsgSelById = _py_rdb.GetPtCmdMsgSelById

def GetPtAlmMsgSelById(point, alm_sel):
    return _py_rdb.GetPtAlmMsgSelById(point, alm_sel)
GetPtAlmMsgSelById = _py_rdb.GetPtAlmMsgSelById

def GetPtHardAddrById(point, hard_addr):
    return _py_rdb.GetPtHardAddrById(point, hard_addr)
GetPtHardAddrById = _py_rdb.GetPtHardAddrById

def GetPtCtrlAddrById(point, ctrl_addr):
    return _py_rdb.GetPtCtrlAddrById(point, ctrl_addr)
GetPtCtrlAddrById = _py_rdb.GetPtCtrlAddrById

def GetPtUpdateSrcById(point, update_src):
    return _py_rdb.GetPtUpdateSrcById(point, update_src)
GetPtUpdateSrcById = _py_rdb.GetPtUpdateSrcById

def GetPtIoGroupById(point, io_group):
    return _py_rdb.GetPtIoGroupById(point, io_group)
GetPtIoGroupById = _py_rdb.GetPtIoGroupById

def GetPtDspFileNameById(point):
    return _py_rdb.GetPtDspFileNameById(point)
GetPtDspFileNameById = _py_rdb.GetPtDspFileNameById

def GetPtUpdateTimeById(point, update_time):
    return _py_rdb.GetPtUpdateTimeById(point, update_time)
GetPtUpdateTimeById = _py_rdb.GetPtUpdateTimeById

def IsPtValueManSetById(point, manSet):
    return _py_rdb.IsPtValueManSetById(point, manSet)
IsPtValueManSetById = _py_rdb.IsPtValueManSetById

def IsPtValueChanFailById(point, chanFail):
    return _py_rdb.IsPtValueChanFailById(point, chanFail)
IsPtValueChanFailById = _py_rdb.IsPtValueChanFailById

def GetEntryIdByName(entryName, point):
    return _py_rdb.GetEntryIdByName(entryName, point)
GetEntryIdByName = _py_rdb.GetEntryIdByName

def GetEntryLongnameByNameStr(ptNameStr, entryLongname):
    return _py_rdb.GetEntryLongnameByNameStr(ptNameStr, entryLongname)
GetEntryLongnameByNameStr = _py_rdb.GetEntryLongnameByNameStr

def GetPtLongnameByNameStr(ptNameStr, pointLongname):
    return _py_rdb.GetPtLongnameByNameStr(ptNameStr, pointLongname)
GetPtLongnameByNameStr = _py_rdb.GetPtLongnameByNameStr

def GetPtCmdMsgSelByNameStr(ptNameStr, cmd_sel):
    return _py_rdb.GetPtCmdMsgSelByNameStr(ptNameStr, cmd_sel)
GetPtCmdMsgSelByNameStr = _py_rdb.GetPtCmdMsgSelByNameStr

def GetPtAlmMsgSelByNameStr(ptNameStr, alm_sel):
    return _py_rdb.GetPtAlmMsgSelByNameStr(ptNameStr, alm_sel)
GetPtAlmMsgSelByNameStr = _py_rdb.GetPtAlmMsgSelByNameStr

def GetPtHardAddrByNameStr(ptNameStr, hard_addr):
    return _py_rdb.GetPtHardAddrByNameStr(ptNameStr, hard_addr)
GetPtHardAddrByNameStr = _py_rdb.GetPtHardAddrByNameStr

def GetPtCtrlAddrByNameStr(ptNameStr, ctrl_addr):
    return _py_rdb.GetPtCtrlAddrByNameStr(ptNameStr, ctrl_addr)
GetPtCtrlAddrByNameStr = _py_rdb.GetPtCtrlAddrByNameStr

def GetPtUpdateSrcByNameStr(ptNameStr, update_src):
    return _py_rdb.GetPtUpdateSrcByNameStr(ptNameStr, update_src)
GetPtUpdateSrcByNameStr = _py_rdb.GetPtUpdateSrcByNameStr

def GetPtIoGroupByNameStr(ptNameStr, io_group):
    return _py_rdb.GetPtIoGroupByNameStr(ptNameStr, io_group)
GetPtIoGroupByNameStr = _py_rdb.GetPtIoGroupByNameStr

def GetPtDspFileNameByNameStr(ptNameStr, dsp_filename):
    return _py_rdb.GetPtDspFileNameByNameStr(ptNameStr, dsp_filename)
GetPtDspFileNameByNameStr = _py_rdb.GetPtDspFileNameByNameStr

def GetPtUpdateTimeByNameStr(ptNameStr, update_time):
    return _py_rdb.GetPtUpdateTimeByNameStr(ptNameStr, update_time)
GetPtUpdateTimeByNameStr = _py_rdb.GetPtUpdateTimeByNameStr

def IsPtValueManSetByNameStr(ptNameStr, manSet):
    return _py_rdb.IsPtValueManSetByNameStr(ptNameStr, manSet)
IsPtValueManSetByNameStr = _py_rdb.IsPtValueManSetByNameStr

def IsPtValueChanFailByNameStr(ptNameStr, chanFail):
    return _py_rdb.IsPtValueChanFailByNameStr(ptNameStr, chanFail)
IsPtValueChanFailByNameStr = _py_rdb.IsPtValueChanFailByNameStr

def GetPtCmdMsgStrById(point, cmdType, cmd_opt, str):
    return _py_rdb.GetPtCmdMsgStrById(point, cmdType, cmd_opt, str)
GetPtCmdMsgStrById = _py_rdb.GetPtCmdMsgStrById

def GetPtCmdMsgStrByNameStr(ptNameStr, cmdType, cmd_opt, str):
    return _py_rdb.GetPtCmdMsgStrByNameStr(ptNameStr, cmdType, cmd_opt, str)
GetPtCmdMsgStrByNameStr = _py_rdb.GetPtCmdMsgStrByNameStr

def GetPairPtById(point, pair_pt):
    return _py_rdb.GetPairPtById(point, pair_pt)
GetPairPtById = _py_rdb.GetPairPtById

def GetPairPtByNameStr(ptNameStr, pair_pt):
    return _py_rdb.GetPairPtByNameStr(ptNameStr, pair_pt)
GetPairPtByNameStr = _py_rdb.GetPairPtByNameStr

def GetPtIdByNameStr(ptNameStr, point):
    return _py_rdb.GetPtIdByNameStr(ptNameStr, point)
GetPtIdByNameStr = _py_rdb.GetPtIdByNameStr

def ReadEntryById(point, common_all):
    return _py_rdb.ReadEntryById(point, common_all)
ReadEntryById = _py_rdb.ReadEntryById

def ReadEntryByNameStr(ptNameStr, common_all):
    return _py_rdb.ReadEntryByNameStr(ptNameStr, common_all)
ReadEntryByNameStr = _py_rdb.ReadEntryByNameStr
# This file is compatible with both classic and new-style classes.


